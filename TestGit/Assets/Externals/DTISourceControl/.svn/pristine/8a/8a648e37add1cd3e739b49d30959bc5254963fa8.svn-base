using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using DTI.SourceControl.ConsoleTools;
using DTI.SourceControl.Svn;
using UnityEditor;
using UnityEngine;

namespace DTI.SourceControl
{
	internal class SvnManager
	{
		public void UpdateAll(string projectPath)
		{
			Debug.Log("Updating current project");
		    var cmd = new Cmd()
		    {
                BaseDirectory = EditorPrefs.GetString(PrefsKeys.SVNPATHKEY),
                Command = SvnTools.Svn,
                Args = "update " + projectPath + " --accept p",
                Patterns = new []
                {
                    "^(?<skip>Updating '.*':)$",
                    "^(?<skip>At revision [0-9]+[.])$",
                    "^(?<skip>Updated to revision [0-9]+[.])$",
                    "^(?<skip>[ADUGER][ ]+.+)$",
                    "^(?<skip>Summary of conflicts:)$",
                    "^(?<skip>  Text conflicts: [0-9]+)$",

                    "^(?<out>C[ ]+.+)$",

                    "^(?<error>svn: E[0-9]+: .*)$",
                }
		    };
            var outResult = cmd.Run();
		    if (outResult.Count != 0)
		    {
                var regex = new Regex("^(C[ ]+)(?<path>[^ ].*)$");
		        var conflicts = String.Join("\n", outResult.Select(x=> regex.Match(x).Groups["path"].Value).ToArray());
		        EditorUtility.DisplayDialog("Conflicts were found!",
		            String.Format(
		                "During update operation there were found {0} conflicts:\n\n{1}\n\nЗовите программиста, мы все умрем!",
		                outResult.Count, conflicts),
		            "Ok");
		        Debug.LogError(String.Format(
		            "During update operation there were found {0} conflicts:\n{1}\nЗовите программиста, мы все умрем!",
		            outResult.Count, conflicts));
		    }
		    else
		    {
		        Debug.Log("The project was successfully updated!");
		    }
		}

        public List<FileStatus> GetStatus(String[] paths)
        {
            Debug.Log("Getting status for: " + String.Join("\n", paths));

            var cmd = new Cmd()
            {
                BaseDirectory = EditorPrefs.GetString(PrefsKeys.SVNPATHKEY),
                Command = SvnTools.Svn,
                Args = "status " + String.Join(" ", paths),
                Patterns = new[]
                {
                    "^(?<out>[?!DAMC][ ]+.+)$"
                }
            };
            var outResult = cmd.Run();
            var fileStatusList = new List<FileStatus>();
            if (outResult.Count == 0) 
                return fileStatusList;

            fileStatusList = outResult.Select(x => new FileStatus(x)).ToList();
            return fileStatusList;
        }

	    public void Commit(String[] paths)
	    {
	        
	    }

        public void Commit(IEnumerable<string> files)
        {
            throw new NotImplementedException();
        }
	}
}
